#line 9 "omiews.prg"
EXTERNAL SIGNXML
EXTERNAL SIGNXMLEX


function main( cServer, cXmlEnviar )

local cXmlrec := ""
local cFile   := ""

IF cServer == NIL ; cServer := "" ; END
IF cXmlEnviar == NIL ; cXmlEnviar := "" ; END

SetMode( 35, 100 )

if empty(cServer)
   QOut( "use omiews <SERVER> <XML_FILE>" )
   return .F.
endif

if empty(cXmlEnviar)
   QOut( "use omiews <SERVER> <XML_FILE>" )
   return .F.
endif

if !file(cXmlEnviar)
   QOut( "File not found... " + cXmlEnviar )
   return .F.
endif

cXmlEnviar := memoread(cXmlEnviar)
cXmlEnviar := strtran(cXmlEnviar,chr(10))
cXmlEnviar := strtran(cXmlEnviar,chr(12))

if empty(cXmlEnviar)
   QOut( "XML file invalid." )
   return .F.
endif

Scroll() ; SetPos(0,0)

DevPos( 04, 10 ) ; DevOut( "Sending request..." )
DevPos( 14, 10 ) ; DevOut( "Status......: Sending..." )

cFile   := "log\response_"+dtos(date())+"_"+strtran(time(),":")+".xml"

cXmlrec := PreparaXml( upper(cServer), cXmlEnviar )

if GravaXML( cFile, cXmlrec )
   DevPos( 14, 10 ) ; DevOut( "Status......: Done, see file " + cFile )
else
   DevPos( 14, 10 ) ; DevOut( "Status......: Error." )
endif

DevPos( 16, 10 ) ; DevOut( "Goodbye!" )
DevPos( 18, 10 ) ; DevOut( "" )

return NIL


function PreparaXml( cServer, cXmlEnviar )

local cXmlRet := ""
local aRet := {}

local cURL          := ""
local cCert         := ""
local cSenha        := ""
local cSoapAction   := ""
local cContentType  := "text/xml;charset=UTF-8"
local nTimeOut      := 0
local cExibeLog     := "N"

hIniFile := HB_ReadIni( "omiews.ini", .F.,,.F. )

If hIniFile == NIL
   QOut( "Could not read from omiews.ini" )
   __Quit()
EndIf

If ! cServer IN hIniFile
   QOut( "Server [" + cServer + "] not found in omiews.ini" )
   __Quit()
EndIf

hData := hIniFile[ cServer ]

If !"URL" IN hData
   QOut( "URL not found in " + cServer )
   __Quit()
EndIf

If !"CERTFILE" IN hData
   QOut( "CertFile not found in " + cServer )
   __Quit()
EndIf

If !"CERTPASSWORD" IN hData
   QOut( "CertPassword not found in " + cServer )
   __Quit()
EndIf

If !"SOAPACTION" IN hData
   QOut( "SoapAction not found in " + cServer )
   __Quit()
EndIf

If !"CONTENTTYPE" IN hData
   QOut( "ContentType not found in " + cServer )
   __Quit()
EndIf

If !"TIMEOUT" IN hData
   QOut( "TimeOut not found in " + cServer )
   __Quit()
EndIf

If !"WITHLOG" IN hData
   QOut( "WithLog not found in " + cServer )
   __Quit()
EndIf

cURL          := alltrim(hData[ "URL" ])
cCert         := alltrim(hData[ "CERTFILE" ])
cSenha        := alltrim(hData[ "CERTPASSWORD" ])
cSoapAction   := alltrim(hData[ "SOAPACTION" ])
cContentType  := alltrim(hData[ "CONTENTTYPE" ])
nTimeOut      := val(hData[ "TIMEOUT" ])
cExibeLog     := alltrim(hData[ "WITHLOG" ])

DevPos( 6, 10 ) ; DevOut( "URL.........: " + cURL )
DevPos( 7, 10 ) ; DevOut( "Certificado.: " + cCert )
DevPos( 8, 10 ) ; DevOut( "Senha.......: " + replicate("*",len(cSenha)) )
DevPos( 9, 10 ) ; DevOut( "Soap Action.: " + cSoapAction )
DevPos( 10, 10 ) ; DevOut( "Content Type: " + cContentType )
DevPos( 11, 10 ) ; DevOut( "Timeout.....: " + alltrim(str(nTimeOut)) )
DevPos( 12, 10 ) ; DevOut( "Exibe Log...: " + cExibeLog )

cXmlRet := EnviaXml( cURL, cXmlEnviar, cCert, cSenha, cSoapAction, cContentType, nTimeOut, cExibeLog )

return cXmlRet


function EnviaXml( cURL, cXml, cCert, cSenha, cSoapAction, cContentType, nTimeOut, cExibeLog )


LOCAL cRet := ""
local oUrl
local oWebService
local cPath := ""
local cFile  := ""
local cFile2 := "wssend.log"
local aDir_ := {}
local cString := ""

IF cSoapAction == NIL ; cSoapAction := "" ; END
IF cContentType == NIL ; cContentType := "" ; END
IF nTimeOut == NIL ; nTimeOut := 0 ; END
IF cExibeLog == NIL ; cExibeLog := "N" ; END

oUrl := tURLSSL():New( cUrl )

oWebService := TipClientSSLHTTP():New( oUrl,cExibeLog="S",,,,cCert,,cSenha)

if nTimeOut=0
   oWebService:nConnTimeout := 30000
else
   if nTimeOut > 100000
      nTimeOut := 100000
   endif
   oWebService:nConnTimeout := nTimeOut
endif

if !empty(cContentType)
   oWebService:hFields["Content-Type"] := cContentType
else
   oWebService:hFields["Content-Type"] := "application/soap+xml;charset=utf-8"
endif

if !empty(cSoapAction)
   oWebService:hFields["SOAPAction"] := cSoapAction
endif

oWebService:cConnetion:="Keep-Alive"

oWebService:cUserAgent := "XHB-SOAP/1.2.1"

IF oWebService:Open()
   IF oWebService:Post(cXml)
      cRet := oWebService:ReadAll()
   ENDIF
ENDIF

if oWebService:ltrace .AND. oWebService:nhandle > -1
   fClose( oWebService:nHandle )
   oWebService:nhandle := -1
endif

oWebService:close()

return cRet


function GravaXML( cFile, cStream )


LOCAL nHandle := FCreate( cFile )

if FError() <> 0
   return .F.
endif

FWrite( nHandle, cStream )

FClose( nHandle )

return( FError() == 0 )


FUNCTION cValToChar( uData )


LOCAL cType := VALTYPE( uData )

   DO CASE
   CASE cType == "C"
      RETURN uData
   CASE cType == "N"
      RETURN ALLTRIM( STR( uData ) )
   CASE cType == "D"
      RETURN DTOC( uData )
   CASE cType == "L"
      RETURN IF( uData, ".T.", ".F." )
   CASE cType == "A"

      RETURN "{Array}..."
   CASE cType == "O"
      RETURN "{Object}..."
   OTHERWISE
      RETURN ""
   ENDCASE

RETURN ""
